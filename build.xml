<?xml version="1.0"?>
<project name="toolkit" default="toolkit" xmlns:if="ant:if" xmlns:unless="ant:unless">
	<condition property="platform.mac">
		<os family="mac"/>
	</condition>
	<condition property="platform.windows">
		<os family="windows"/>
	</condition>
	<condition property="platform.linux">
		<and>
			<os family="unix"/>
			<not>
				<os family="mac"/>
			</not>
		</and>
	</condition>
	<property if:set="platform.mac" name="platform" value="mac"/>
	<property if:set="platform.windows" name="platform" value="windows"/>
	<property if:set="platform.linux" name="platform" value="linux"/>

	<property name="src" value="src"/>
	<property name="lib" value="libraries"/>
	<property name="build_root" value="ant_build"/>
	<property name="package_dir" value="com/trollworks/toolkit"/>
	<property name="toolkit_build" value="${build_root}/toolkit"/>
	<property name="annotation_src" value="com/trollworks/toolkit/annotation"/>
	<property name="generated_src" value="${build_root}/annotations"/>
	<property name="ap_jar" value="${lib}/toolkit_annotation_processors.jar"/>
	<property name="ap_build" value="${build_root}/annotation_processors"/>
	<property name="min_jdk" value="1.8"/>
	<property name="primary_version" value="4.0.0"/>
	<property name="toolkit_jar" value="${lib}/toolkit-${primary_version}.jar"/>
	<property name="toolkit_src_jar" value="${lib}/toolkit-${primary_version}-src.jar"/>
	<property name="launcher_stub_src" value="com/trollworks/toolkit/utility/Launcher.java"/>
	<tstamp>
		<format property="version" pattern="${primary_version}.yyyyMMddHHmmss"/>
	</tstamp>
	<tstamp>
		<format property="year" pattern="yyyy"/>
	</tstamp>

	<target name="clean" description="Clean up after a build" depends="clean_toolkit,clean_annotations">
		<delete dir="${build_root}"/>
	</target>

	<target name="clean_toolkit" description="Clean up after a toolkit build">
		<delete dir="${toolkit_build}"/>
		<delete dir="${generated_src}"/>
		<delete file="${toolkit_jar}"/>
		<delete file="${toolkit_src_jar}"/>
	</target>
	
	<target name="toolkit" description="Build the toolkit" depends="clean_toolkit">
		<mkdir dir="${toolkit_build}"/>
		<mkdir dir="${generated_src}"/>

		<!-- Compile the code. -->
		<javac srcdir="${src}" destdir="${toolkit_build}"
			excludes="${annotation_src}/processor/**,${launcher_stub_src}" debug="no" optimize="yes"
			target="${min_jdk}" source="${min_jdk}" deprecation="true" includeantruntime="no">
			<classpath>
				<pathelement location="${lib}/trove-3.0.3.jar"/>
				<pathelement location="../apple_stubs/apple_stubs.jar"/>
			</classpath>
			<compilerarg value="-Xlint:all"/>
			<compilerarg value="-Xlint:-serial"/>
			<compilerarg value="-processorpath"/>
			<compilerarg value="${ap_jar}"/>
			<compilerarg value="-s"/>
			<compilerarg value="${generated_src}"/>
			<compilerarg value="-implicit:class"/>
		</javac>

		<!-- Compile the launcher code to be compatible with Java 1.1. -->
		<javac srcdir="${src}" destdir="${toolkit_build}"
			includes="${launcher_stub_src}" debug="no" optimize="yes"
			target="1.1" source="1.1" deprecation="true" includeantruntime="no">
			<compilerarg value="-Xlint:all"/>
			<compilerarg value="-Xlint:-options"/>
		</javac>

		<!-- Copy the resources over. -->
		<copy todir="${toolkit_build}">
			<fileset dir="${src}" includes="**/*.properties,**/*.png,**/*.gif"/>
		</copy>

		<!-- Create the library jar file. -->
		<jar destfile="${toolkit_jar}" basedir="${toolkit_build}" duplicate="fail">
			<manifest>
				<attribute name="bundle-name" value="Trollworks Toolkit"/>
				<attribute name="bundle-version" value="${version}"/>
				<attribute name="bundle-license" value="Mozilla Public License 2.0"/>
				<attribute name="bundle-copyright-owner" value="Richard A. Wilkes"/>
				<attribute name="bundle-copyright-years" value="1998-${year}"/>
			</manifest>
		</jar>

		<!-- Create the source jar file. -->
		<jar destfile="${toolkit_src_jar}" basedir="${src}" duplicate="fail">
			<manifest>
				<attribute name="bundle-name" value="Trollworks Toolkit Source"/>
				<attribute name="bundle-version" value="${version}"/>
				<attribute name="bundle-license" value="Mozilla Public License 2.0"/>
				<attribute name="bundle-copyright-owner" value="Richard A. Wilkes"/>
				<attribute name="bundle-copyright-years" value="1998-${year}"/>
			</manifest>
		</jar>
	</target>

	<target name="clean_annotations" description="Clean up after an annotation processor build">
		<delete dir="${ap_build}"/>
		<delete file="${ap_jar}"/>
	</target>

	<target name="annotations" description="Build the annotation processors" depends="clean_annotations">
		<mkdir dir="${ap_build}"/>

		<!-- Compile the code. -->
		<javac srcdir="${src}" destdir="${ap_build}" includes="${annotation_src}/**"
			debug="no" optimize="yes" target="${min_jdk}" source="${min_jdk}" deprecation="true"
			includeantruntime="no">
			<compilerarg value="-Xlint:all"/>
			<compilerarg value="-Xlint:-serial"/>
		</javac>

		<!-- Create the jar file. -->
		<jar destfile="${ap_jar}" basedir="${ap_build}" duplicate="fail">
			<manifest>
				<attribute name="bundle-name" value="Trollworks Toolkit Annotation Processors"/>
				<attribute name="bundle-version" value="${version}"/>
				<attribute name="bundle-license" value="Mozilla Public License 2.0"/>
				<attribute name="bundle-creator" value="Richard A. Wilkes"/>
				<attribute name="bundle-copyright" value="Â© 1998-${year}"/>
			</manifest>
			<service type="javax.annotation.processing.Processor">
				<provider classname="com.trollworks.toolkit.annotation.processor.localization.Processor"/>
			</service>
		</jar>
	</target>

	<target name="launcher" description="Compiles a launcher tailored to your app.">
		<delete file="${app.dir}/${app.exe}"/>
		<fail unless="app.dir" message="You must define 'app.dir'"/>
		<fail unless="app.name" message="You must define 'app.name'"/>
		<fail unless="app.exe" message="You must define 'app.exe'"/>
		<fail if:set="platform.linux" unless="app.categories" message="You must define 'app.categories'"/>
		<fail if:set="platform.linux" unless="app.keywords" message="You must define 'app.keywords'"/>
		<exec unless:set="platform.windows" executable="gcc" dir="launcher" failonerror="yes">
			<arg value="-O2"/>
			<arg value="-Wall"/>
			<arg if:set="platform.linux" value="-std=gnu99"/>
			<arg if:set="platform.mac" value="-arch"/>
			<arg if:set="platform.mac" value="x86_64"/>
			<arg if:set="platform.mac" value="-arch"/>
			<arg if:set="platform.mac" value="i386"/>
			<arg value="-DAPP_NAME=${app.name}"/>
			<arg if:set="platform.linux" value="-DCATEGORIES=${app.categories}"/>
			<arg if:set="platform.linux" value="-DKEYWORDS=${app.keywords}"/>
			<arg value="launcher.c"/>
			<arg value="-o"/>
			<arg value="${app.dir}/${app.exe}"/>
		</exec>
		<exec if:set="platform.windows" executable="cl.exe" dir="launcher" failonerror="yes">
			<arg value="/GA"/>
			<arg value="/O1"/>
			<arg value="/W3"/>
			<arg value="/Gd"/>
			<arg value="/nologo"/>
			<arg value="/DAPP_NAME=${app.name}"/>
			<arg value="/Fe${app.dir}/${app.exe}"/>
			<arg value="/TC"/>
			<arg value="launcher.c"/>
			<arg value="/link"/>
			<arg value="User32.lib"/>
			<arg value="Advapi32.lib"/>
			<arg value="/SUBSYSTEM:WINDOWS"/>
		<!--	<arg value="install/windows/assault.res"/> -->
			<arg value="/MACHINE:X86"/>
		</exec>
	</target>

	<target name="jre" description="Unpacks a JRE into the ${support} directory.">
		<fail unless="support" message="You must define 'support'"/>
		<mkdir dir="${support}"/>
		<unzip src="launcher/jre-${platform}.zip" dest="${support}"/>
		<chmod dir="${support}/jre" includes="**/java,**/*.so,**/*.dylib,**/jspawnhelper" perm="+x"/>
	</target>
</project>
